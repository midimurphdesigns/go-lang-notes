# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work

# Build output
gonotes
gonotes.exe
build/
dist/

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Logs
*.log
logs/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Notes storage (optional - uncomment if you don't want to track notes in git)
# notes/
# *.md
# !README.md

# Backup files
*.bak
*.backup

# Database files (if you add database support later)
*.db
*.sqlite
*.sqlite3

# Configuration files with sensitive data
config.json
config.yaml
config.yml
settings.json

# Coverage reports
coverage.txt
coverage.html

# Profiling data
*.prof
*.pprof

# Air live reload (if you use it for development)
tmp/

# ===== FRONTEND SPECIFIC =====
# Dependencies
frontend/node_modules/
frontend/.pnp
frontend/.pnp.js

# Testing
frontend/coverage/

# Production builds
frontend/build/
frontend/dist/

# Frontend logs
frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*

# Frontend environment files
frontend/.env
frontend/.env.local
frontend/.env.development.local
frontend/.env.test.local
frontend/.env.production.local

# Frontend cache
frontend/.cache/
frontend/.parcel-cache/

# ===== BACKEND SPECIFIC =====
# Go build artifacts
backend/*.exe
backend/*.dll
backend/*.so
backend/*.dylib
backend/gonotes
backend/gonotes.exe

# Go test files
backend/*.test
backend/*.out

# Go coverage
backend/coverage.txt
backend/coverage.html

# Go profiling
backend/*.prof
backend/*.pprof

# Go vendor directory (if you use vendoring)
backend/vendor/

# Backend logs
backend/logs/
backend/*.log

# Backend environment files
backend/.env
backend/.env.local
backend/.env.development
backend/.env.test
backend/.env.production

# ===== MISC FOLDERS =====
# Node modules in root (if any)
node_modules/

# Package lock files (optional - uncomment if you don't want to track them)
# package-lock.json
# frontend/package-lock.json

# IDE specific files
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# OS specific files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# Temporary and cache directories
.tmp/
.cache/
.temp/

# Local development files
.local/
local/

# Backup and swap files
*.bak
*.backup
*.swp
*.swo
*~

# Archive files
*.zip
*.tar.gz
*.rar

# Compiled files
*.com
*.class
*.dll
*.exe
*.o
*.so

# Package files
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port 